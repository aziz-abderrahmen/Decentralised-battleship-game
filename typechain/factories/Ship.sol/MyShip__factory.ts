/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { MyShip, MyShipInterface } from "../../Ship.sol/MyShip";

const _abi = [
  {
    inputs: [],
    name: "fire",
    outputs: [
      {
        internalType: "uint256",
        name: "t_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t_y",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
    ],
    name: "place",
    outputs: [
      {
        internalType: "uint256",
        name: "cord_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cord_y",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "setShipPostion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "setTargetPostion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610244806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806312789b5b1461005c5780632fb565e81461008d578063457094cc146100a9578063989eeb46146100c8578063c1c87a18146100e4575b600080fd5b61007660048036038101906100719190610196565b610100565b6040516100849291906101e5565b60405180910390f35b6100a760048036038101906100a29190610196565b610114565b005b6100b1610126565b6040516100bf9291906101e5565b60405180910390f35b6100e260048036038101906100dd9190610196565b610137565b005b6100fe60048036038101906100f99190610196565b610149565b005b600080600054915060015490509250929050565b81600081905550806001819055505050565b600080600254915060035490509091565b81600081905550806001819055505050565b81600281905550806003819055505050565b600080fd5b6000819050919050565b61017381610160565b811461017e57600080fd5b50565b6000813590506101908161016a565b92915050565b600080604083850312156101ad576101ac61015b565b5b60006101bb85828601610181565b92505060206101cc85828601610181565b9150509250929050565b6101df81610160565b82525050565b60006040820190506101fa60008301856101d6565b61020760208301846101d6565b939250505056fea2646970667358221220220500ce3c9311ebe214ff942318873d3091e9879e42c3740d9c15376d9d6d4d64736f6c63430008100033";

type MyShipConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyShipConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyShip__factory extends ContractFactory {
  constructor(...args: MyShipConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MyShip> {
    return super.deploy(overrides || {}) as Promise<MyShip>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MyShip {
    return super.attach(address) as MyShip;
  }
  override connect(signer: Signer): MyShip__factory {
    return super.connect(signer) as MyShip__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyShipInterface {
    return new utils.Interface(_abi) as MyShipInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MyShip {
    return new Contract(address, _abi, signerOrProvider) as MyShip;
  }
}
